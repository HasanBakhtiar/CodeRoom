{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hasan\\\\OneDrive\\\\Desktop\\\\MatrixGroups\\\\CodeRoom\\\\JS\\\\ReactJS\\\\lesson7-Hook\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = props => {\n  //state FULL\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  const [count, action] = useState(props.count);\n\n  const clearCount = () => {\n    if (count > 0) {\n      action(count - 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }\n  }, \"U clicked \", count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clearCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }\n  }, \"-1\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      action(count + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }\n  }, \"+1\"));\n};\n\nApp.defaultProps = {\n  count: 0\n};\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/hasan/OneDrive/Desktop/MatrixGroups/CodeRoom/JS/ReactJS/lesson7-Hook/src/index.js"],"names":["React","useState","ReactDOM","App","props","useEffect","effect","cleanup","input","count","action","clearCount","defaultProps","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAQA,MAAMC,GAAG,GAAGC,KAAD,IAAS;AAAE;AAGlBC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,MAAM;AACN,WAAO,MAAM;AACTC,MAAAA,OAAO;AACV,KAFD;AAGH,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;AAOA,QAAM,CAACC,KAAD,EAAQC,MAAR,IAAkBT,QAAQ,CAACG,KAAK,CAACK,KAAP,CAAhC;;AAEA,QAAME,UAAU,GAAC,MAAI;AACjB,QAAIF,KAAK,GAAG,CAAZ,EAAe;AACXC,MAAAA,MAAM,CAACD,KAAK,GAAC,CAAP,CAAN;AACH;AACJ,GAJD;;AAKG,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcA,KAAd,CADJ,eAEI;AAAQ,IAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAI;AAACD,MAAAA,MAAM,CAACD,KAAK,GAAC,CAAP,CAAN;AAAgB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,CADJ;AAOH,CAxBJ;;AA0BGN,GAAG,CAACS,YAAJ,GAAkB;AACdH,EAAAA,KAAK,EAAE;AADO,CAAlB;AAOHP,QAAQ,CAACW,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App =(props)=>{ //state FULL\r\n\r\n\r\n    useEffect(() => {\r\n        effect\r\n        return () => {\r\n            cleanup\r\n        }\r\n    }, [input])\r\n\r\n    const [count, action] = useState(props.count)\r\n   \r\n    const clearCount=()=>{\r\n        if (count > 0) {\r\n            action(count-1);\r\n        }\r\n    }\r\n       return(\r\n           <div>\r\n               <p>U clicked {count}</p>\r\n               <button onClick={clearCount}>-1</button>\r\n               <button onClick={()=>{action(count+1)}}>+1</button>\r\n           </div>\r\n       )\r\n   }\r\n   \r\n   App.defaultProps ={\r\n       count :0\r\n   }\r\n   \r\n \r\n   \r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"]},"metadata":{},"sourceType":"module"}